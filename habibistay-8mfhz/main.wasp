app habibistay {
  wasp: {
    version: "^0.13.0"
  },
  title: "habibistay",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
  id       Int       @id @default(autoincrement())
  bookings Booking[]
  listings Listing[]
psl=}

entity Listing {=psl
  id             Int       @id @default(autoincrement())
  address        String
  price          Float
  availableFrom  DateTime
  availableUntil DateTime
  maxGuests      Int
  user           User      @relation(fields: [userId], references: [id])
  userId         Int
  bookings       Booking[]
psl=}

entity Booking {=psl
  id        Int      @id @default(autoincrement())
  dateFrom  DateTime
  dateUntil DateTime
  guests    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId Int
psl=}

action createListing {
  fn: import { createListing } from "@src/actions.js",
  entities: [Listing, User]
}

action makeBooking {
  fn: import { makeBooking } from "@src/actions.js",
  entities: [User, Listing, Booking]
}

query getListing {
  fn: import { getListing } from "@src/queries.js",
  entities: [Listing]
}

query getUserListings {
  fn: import { getUserListings } from "@src/queries.js",
  entities: [User, Listing]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}

route ListingRoute { path: "/listing/:listingId", to: ListingPage }
page ListingPage {
  component: import ListingPage from "@src/pages/Listing.jsx",
  authRequired: true
}

route DashboardRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}